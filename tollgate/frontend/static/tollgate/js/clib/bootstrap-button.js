// Generated by CoffeeScript 1.3.1

(function($) {
  var Button;
  Button = (function() {

    Button.name = 'Button';

    function Button(element, options) {
      this.$element = $(element);
      this.options = $.extend({}, $.fn.button.defaults, options);
    }

    Button.prototype.setState = function(state) {
      var $el, d, data, val;
      d = "disabled";
      $el = this.$element;
      data = $el.data();
      val = ($el.is("input") ? "val" : "html");
      state = state + "Text";
      data.resetText || $el.data("resetText", $el[val]());
      $el[val](data[state] || this.options[state]);
      return setTimeout(function() {
        if (state === "loadingText") {
          return $el.addClass(d).attr(d, d);
        } else {
          return $el.removeClass(d).removeAttr(d);
        }
      }, 0);
    };

    Button.prototype.toggle = function() {
      var $parent;
      $parent = this.$element.parent("[data-toggle=\"buttons-radio\"]");
      $parent && $parent.find(".active").removeClass("active");
      return this.$element.toggleClass("active");
    };

    return Button;

  })();
  $.fn.button = function(option) {
    return this.each(function() {
      var $this, data, options;
      $this = $(this);
      data = $this.data("button");
      options = typeof option === "object" && option;
      if (!data) {
        $this.data("button", (data = new Button(this, options)));
      }
      if (option === "toggle") {
        return data.toggle();
      } else {
        if (option) {
          return data.setState(option);
        }
      }
    });
  };
  $.fn.button.defaults = {
    loadingText: "loading..."
  };
  $.fn.button.Constructor = Button;
  return $(function() {
    return $("body").on("click.button.data-api", "[data-toggle^=button]", function(e) {
      return $(e.currentTarget).button("toggle");
    });
  });
})(window.jQuery);
